Snippet 1->
1. The for loop will execute infinitely.
2. As the "i" is decreasing from 0 to negative infinity.
3. Output: 0, -1, -2..., -infinity
4. To control the loop the "i" should be post incremented(i++)

Snippet 2->
1. Throws compile time error.
2. while loop expects a condition and count=0 is not a condition it's assignment.
3. Result within the while loop is either true or false. So while loop expects a Boolean value either true or false, but we are getting int value as 0.
4. Error: incompatible types: int cannot be converted to Boolean.

Snippet 3->
1. It will go to an infinite loop
2. From 0 to infinity it will run.

Snippet 4->
Output:
1
2
3
4
5
6
7
8
9
10

Snippet 5->
Output:
10 to infinity

Snippet 6->
Output:
0
1
2
3
4
Done
-Done prints only once because, it is not inside the for loop to print until the condition becomes false.

Snippet 7->
1. Throws compile time error:
The local variable count may not have been initialized
2. We need to initialize the count variable to any positive integer value.

Snippet 8->
Output:
1 
Adjustments needed: 
num--  --> num++
while(num>0) --> while (num > 0 && num <= 5)

Snippet 9->
Output:
0
2
4

Snippet 10->
1. Throws compile time error, while loop always require a condition which is either true or false.
2. Inside the while loop "10" is an integer value,
3. Error: incompatible types: int cannot be converted to Boolean

Snippet 11->
Output:
0
2
4

Snippet 12->
1. Compile time error
2. Error: Cannot find symbol x
3. x has scope inside the for loop, it cannot be accessed outside the existing loop

---------------------------------------------------------------------------
SECTION 2 (DRY RUN)

Snippet 1->
Dry run:
i  j
1  1
1  2

2  1
2  2

3  1
3  2

Output:
1 1 1 2
2 1 2 2 
3 1 3 2

Snippet 2->

Dry run:
When i=5,total=0;
total:0+5=5
total:5-1=4

When i=4, total=4;
total:4+4=8
total:8-1=7

When i=3, total=7 (if condition will satisfy, hence it skips the condition total -= 1. total remains the same)
total:7+3=10


When i=2, total=10
total:10+2=12
total:12-1=11

When i=1, total=11
total:11+1=12
total:12-1=11

--> total=11

Snippet 3->
Dry run:
when count=0, 
0_ 
when count=1,
0_1_
when count=2,
0_1_2_
when count=3
0_1_2_3

Output:
0 1 2 3

Snippet 4->
When i=1,
1_
when i=2,
1_2_
when i=3,
1_2_3
when i=4,
1_2_3_4
when i=5,
1_2_3_4_5

Output:
1 2 3 4 5

Snippet 5->
Dry run:
When i= 1,
num=1-1=0
when i=2,
num=0+2=2
when i=3,
num=2-3=-1
when i=4,
num=-1+4=3

Output=3

Snippet 6->
Dry run:
x= 5,
y= 6 - 6 + 4 + 4 = 8

Output:8

Snippet 7->
Dry run:
a=10, b=5
result= 11 * 5 - 10 + 4 = 55-6 = 49

Output:
49

Snippet 8->
when count=0,i=0,
count: 0+0-2=-2
when i=1,
count: -2+2-4=-4
when i=2,
count: -4+4-6=-6
when i=3,
count=-6

Output:
-6
---------------------------------------------------------------------------
SECTION 3:

Q.1 Write a program to calculate the sum of the first 50 natural numbers. 

public class Aug22_Tasks{
public static void main(String[] args) {
        int num = 1;
        int sum = 0;
        while (num <= 50) {
            sum = sum + num;
            num++;
        }
        System.out.println("Sum of first 50 natural numbers" + sum);

    }
}

Q.2 Write a program to compute the factorial of the number 10
public class Aug22_Tasks{
public static void main(String[] args) {
int num = 10;
        int fact = 1;
        while (num >= 1) {
            fact = fact * num;
            num--;
        }
System.out.println("Factorial of 10 is:" + fact);
   }
}

Q.3 Write a program to print all multiples of 7 between 1 and 100
public class Aug22_Tasks{
public static void main(String[] args) {

        for (int num = 1; num <= 100; num++) {
            if (num % 7 == 0) {
                System.out.println("Number divisible by 7 in between 1 to 100 are:" + num);

            }
        }
}
}

Q.4 Write a program to reverse the digits of the number 1234. The output should be 4321.
public class Aug22_Tasks{
public static void main(String[] args) {
        int num = 1234;
        int rev = 0;
        int remainder;

        while (num > 0) {
            remainder = num % 10;
            rev = rev * 10 + remainder;
            num = num / 10;
        }
        System.out.println("Reverse number of given number is:" + rev);

    }

}

Q.5. Write a program to print the Fibonacci sequence up to the number 21. 
public class Aug22_Tasks {
    public static void main(String[] args) {
        int number = 21;
        int num1 = 0;
        int num2 = 1;
        int sum = 0;

        for (int i = 1; i <= number; i++) {
            if (i == 1) {
                sum = num1;
            } else if (i == 2) {
                sum = num2;
            } else {
                sum = num1 + num2;
                num1 = num2;
                num2 = sum;
            }
        }

        System.out.println("Fibonacci number at position " + number + " is " + sum);
    }
}


Q.6 Write a program to find and print the first 5 prime numbers.
public class Aug22_Tasks {
    public static void main(String[] args) {
        int count = 0;
        int num = 2;

        while (count < 5) {
            boolean isPrime = true;

            for (int i = 2; i < num; i++) {
                if (num % i == 0) {
                    isPrime = false;
                    break;
                }
            }

            if (isPrime) {
                System.out.print(num + " ");
                count++;
            }

            num++;
        }
    }
}


Q.7 Write a program to calculate the sum of the digits of the number 9876. The output should be 30 (9 + 8 + 7 + 6). 

public class Aug22_Tasks{
public static void main(String[] args) {
        int num = 9876;
        int sum = 0;
        while (num > 0) {
            int takeLastDigitOut = num % 10;
            sum = sum + takeLastDigitOut;
            num = num / 10;
        }
        System.out.println("Sum of the digits of 9876 is:" + sum);

    }

}

Q.8 Write a program to count down from 10 to 0, printing each number. 

public class Aug22_Tasks{ 
public static void main(String[] args) {
        int num = 0;
        for (int i = 10; i >= num; i--) {
            System.out.println("Numbers are:" + i);
        }

    }

}

Q.9 Write a program to find and print the largest digit in the number 4825.
public class Aug22_Tasks {
    public static void main(String[] args) {
        int number = 4825;
        int largestDigit = 0;

        while (number > 0) {
            int digit = number % 10;
            if (digit > largestDigit) {
                largestDigit = digit;
            }
            number = number / 10;
        }

        System.out.println("The largest digit is: " + largestDigit);
    }
}
 

Q.10 Write a program to print all even numbers between 1 and 50
public class Aug22_Tasks{ 
    public static void main(String[] args) {

        for (int num = 1; num <= 50; num++) {
            if (num % 2 == 0) {
                System.out.println("Even numbers between 1 to 50 is:" + num);
            }
        }
    }

Q.11 Write a Java program to demonstrate the use of both pre-increment and post-decrement operators in a single expression

public class Aug22_Tasks{
public static void main(String[] args) {
        int num = 5;
        int result = num++ - --num + num-- + ++num;
        System.out.println("Result of pre/post increment/decrement expression is:" + result);
    }

}

Q. 12 

***** 
***** 
***** 
***** 
***** 

public class Aug22_Tasks{
 public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= 5; j++) {
                System.out.print("* ");

            }
            System.out.println();
        }
    }

}

Q.13 Write a program to print the following pattern: 
1 
2*2 
3*3*3 
4*4*4*4 
5*5*5*5*5 
5*5*5*5*5 
4*4*4*4 
3*3*3 
2*2 
1 

public class Aug22_Tasks{
public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(i);
                if (j < i) {
                    System.out.print("*");
                }
            }
            System.out.println();
        }
        for (int i = 5; i >= 1; i--) {
            for (int j = i; j >= 1; j--) {
                System.out.print(i);
                if (j > 1) {
                    System.out.print("*");
                }
            }
            System.out.println();
        }
    }
}

Q.14 Write a program to print the following pattern:
    *
    **
    ***
    ****
    *****
    ******
public class Aug22_Tasks{

    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print("*");
            }
            System.out.println();
        }

    }

}

15. Write a program to print the following pattern: 
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
public class Aug22_Tasks {
    public static void main(String[] args) {
        
        for (int i = 1; i <= 5; i++) {
            for (int j = 5 - i; j > 0; j--) {
                System.out.print(" ");
            }
            for (int k = 1; k <= i; k++) {
                System.out.print("* ");
            }
            System.out.println();
        }
    }
}


Q. 16. Write a program to print the following pattern
    *
   ***
  *****
 *******
*********

public class Aug22_Tasks {
    public static void main(String[] args) {
        
        for (int i = 1; i <= 5; i++) {
            for (int j = i; j < 5; j++) {
                System.out.print(" ");
            }
            for (int k = 1; k <= (2 * i - 1); k++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }
}

Q.17 Write a program to print the following pattern:
* * * * * 
 * * * * 
  * * * 
   * * 
    * 

public class Aug22_Tasks {
    public static void main(String[] args) {
        
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < i; j++) {
                System.out.print(" ");
            }
            for (int k = 5 - i; k > 0; k--) {
                System.out.print("* ");
            }
            System.out.println();
        }
    }
}


Q.18 Write a program to print the following pattern: 
********* 
 ******* 
  ***** 
   *** 
    * 
   *** 
  ***** 
 ******* 
*********

public class Aug22_Tasks {
    public static void main(String[] args) {
        
        
        for (int i = 1; i <= 4; i++) {
            for (int j = 4 - i; j > 0; j--) {
                System.out.print(" ");
            }
            for (int k = 1; k <= (2 * i - 1); k++) {
                System.out.print("*");
            }
            System.out.println();
        }
        
        for (int i = 4 - 1; i > 0; i--) {
            for (int j = 4 - i; j > 0; j--) {
                System.out.print(" ");
            }
            for (int k = 1; k <= (2 * i - 1); k++) {
                System.out.print("*");
            }
            System.out.println();
        }
    }
}


Q.19. Write a program to print the following pattern:
    1
    1*2
    1*2*3
    1*2*3*4
    1*2*3*4*5

public class Aug22_Tasks{
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
                if (i > j) {
                    System.out.print("*");
                }
            }
            System.out.println();
        }
    }

}

Q.20. Write a program to print the following pattern: 
5 
5*4 
5*4*3 
5*4*3*2 
5*4*3*2*1 

public class Aug22_Tasks{

public static void main(String[] args) {
        for (int i = 5; i >= 1; i--) {
            for (int j = 5; j >= i; j--) {
                System.out.print(j);
                if (i < j) {
                    System.out.print("*");
                }

            }
            System.out.println();
        }
    }
}

Q.21 Write a program to print the following pattern
1 
1*3 
1*3*5 
1*3*5*7 
1*3*5*7*9

public class Aug22_Tasks {
    public static void main(String[] args) {
        int rows = 5;
        int num = 1;

        for (int i = 1; i <= rows; i++) {
            for (int j = 1; j <= i; j++) {
                if (j > 1) {
                    System.out.print("*");
                }
                System.out.print(num);
                num += 2;
            }
            System.out.println();
        }
    }
}


Q.22 Write a program to print the following pattern
********* 
 ******* 
  ***** 
   *** 
    * 
   *** 
  ***** 
 ******* 
*********
public class Aug22_Tasks {
    public static void main(String[] args) {

        for (int i = 5; i > 0; i--) {
            for (int j = 5 - i; j > 0; j--) {
                System.out.print(" ");
            }
            for (int k = 2 * i - 1; k > 0; k--) {
                System.out.print("*");
            }
            System.out.println();
        }

        for (int i = 2; i <= 5; i++) {
            for (int j = 5 - i; j > 0; j--) {
                System.out.print(" ");
            }
            for (int k = 2 * i - 1; k > 0; k--) {
                System.out.print("*");
            }
            System.out.println();
        }
    }
}


23. Write a program to print the following pattern: 
11111 
22222 
33333 
44444 
55555 
public class Aug22_Tasks {
    public static void main(String[] args) {
        
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= 5; j++) {
                System.out.print(i);
            }
            System.out.println();
        }
    }
}

Q.24 Write a program to print the following pattern: 
1 
22 
333 
4444 
55555 

public class Aug22_Tasks {
    public static void main(String[] args) {
                for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(i);
            }
            System.out.println();
        }
    }
}

Q.25. Write a program to print the following pattern: 
1 
12 
123 
1234 
12345 
public class Aug22_Tasks {
    public static void main(String[] args) {
        
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(j);
            }
            System.out.println();
        }
    }
}

Q.26 Write a program to print the following pattern:
1 
2 3 
4 5 6 
7 8 9 10 
11 12 13 14 15
public class Aug22_Tasks {
    public static void main(String[] args) {
                int num = 1;
        
        for (int i = 1; i <= rows; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(num + " ");
                num++;
            }
            System.out.println();
        }
    }
}


